(()=>{const t=z.compDef({draw:t=>z.html('<pre class="language-js"><code>'+(t=>{const e=t.match(/^\n(\s\s+)/);if(e){const n=e[1].length;t=t.split("\n").reduce(((t,e)=>(e.length&&t.push(e.substr(n)),t)),[]).join("\n")}return t})(t.attrs.code)+"</code></pre>")}),e=z.compDef({draw:e=>z.elem("article",z.elem("div",{class:"code"},z.comp(t,{code:e.attrs.code})),z.elem("div",{class:"demo"},e.attrs.demo.type===z.types.compDef?z.comp(e.attrs.demo):e.attrs.demo))}),n={value:0},a=z.compDef({draw:t=>[z.text("Counter: "+n.value),z.elem("button",{onclick(){n.value++,t.redraw()}},z.text("+")),z.elem("button",{onclick(){n.value--,t.redraw()}},z.text("-"))]}),o={value:0,interval:null},r=z.compDef({init:t=>{o.interval=setInterval((()=>{o.value++,t.redraw()}),1e3)},draw:t=>[z.elem("div",z.text("Timer: "+o.value))]}),i={text:"",add(){if(i.text.length)return i.list.push(i.text),!0},list:[]},l=z.compDef({draw:t=>[z.elem("div",z.elem("input",{oninput(t){i.text=t.target.value},onkeydown(e){"Enter"===e.key&&i.add()&&(t.redraw(),i.text=e.target.value="")},placeholder:"Enter a label."}),z.elem("button",{onclick(){i.add()&&t.redraw()}},z.text("Add Todo"))),z.elem("ul",i.list.map(((e,n)=>z.elem("li",z.text(e),z.elem("button",{onclick(e){i.list.splice(n,1),t.redraw()}},z.text("x"))))))]}),s=["Aki","Adam","Amy","Ang","Brianna","Bruce","Cassandra","Charles","Colette","Dae","Deion","Elijah","Emma","Han","Hiromi","Jackie","Jamal","Jin","Kalisha","Keysha","Lamonte","Liang","Naoki","Osamu"],d=["Anderson","Barnes","Chan","Diaz","Ferguson","Hunt","James","Lee","McDonald","Olson","Ramirez","Singh","Smith","Wood"],c=[];let m=0;const h=()=>{c.push({id:m++,firstName:s[Math.floor(Math.random()*s.length)],lastName:d[Math.floor(Math.random()*d.length)],age:Math.floor(60*Math.random()+18)})};for(let t=0;t<250;t++)h();const p=z.compDef({draw:t=>[z.elem("div",z.elem("button",{onclick(e){h(),t.redraw()}},z.text("add")),z.elem("button",{onclick(e){(t=>{let e,n=t.length;for(;0!==n;)e=Math.floor(Math.random()*n),n--,[t[n],t[e]]=[t[e],t[n]]})(c),t.redraw()}},z.text("shuffe")),z.elem("button",{onclick(e){c.push(c.shift()),t.redraw()}},z.text("move first to last")),z.elem("button",{onclick(e){c.unshift(c.pop()),t.redraw()}},z.text("move last to first")),z.text("Length: "+c.length)),z.elem("table",z.elem("thead",z.elem("tr",z.elem("th",{class:"sort",onclick(e){c.sort(((t,e)=>t.id-e.id)),t.redraw()}},z.text("ID")),z.elem("th",{class:"sort",onclick(e){c.sort(((t,e)=>{const n=t.firstName.toUpperCase(),a=e.firstName.toUpperCase();return n<a?-1:n>a?1:0})),t.redraw()}},z.text("First Name")),z.elem("th",{class:"sort",onclick(e){c.sort(((t,e)=>{const n=t.lastName.toUpperCase(),a=e.lastName.toUpperCase();return n<a?-1:n>a?1:0})),t.redraw()}},z.text("Last Name")),z.elem("th",{class:"sort",onclick(e){c.sort(((t,e)=>t.age-e.age)),t.redraw()}},z.text("Age")))),z.elem("tbody",c.map((t=>z.elem("tr",z.elem("td",{class:"r"},z.text(t.id)),z.elem("td",z.text(t.firstName)),z.elem("td",z.text(t.lastName)),z.elem("td",{class:"r"},z.text(t.age)))))))]});const u=z.compDef({draw:(t,e)=>e||z.elem("canvas",{width:"100%",height:"100%"}),tick:(t,e)=>{const n=t.children[0].dom,a=n.getContext("2d"),o=n.getBoundingClientRect(),r=Math.min(o.width,window.innerWidth)*window.devicePixelRatio,i=o.height*window.devicePixelRatio,l=Math.random()*r/10,s=Math.random()*i/10;n.width!=r&&(n.width=r),n.height!=i&&(n.height=i),a.save(),a.globalAlpha=1,a.globalCompositeOperation="destination-in",a.fillStyle="rgba(0, 0, 0, 0.95)",a.fillRect(0,0,r,i),a.restore(),a.fillStyle="rgb("+(255*Math.random()|0)+","+(255*Math.random()|0)+","+(255*Math.random()|0)+")",a.fillRect(Math.random()*(r-l),Math.random()*(i-s),l,s)}}),v=z.comp(u),x=z.compDef({draw:(t,e)=>z.elem("svg",z.elem("circle",{cx:25,cy:25,r:25,"data-vx":1,"data-vy":1})),tick:t=>{const e=t.children[0].dom,n=e.querySelector("circle"),a=e.getBoundingClientRect(),o=parseInt(n.dataset.vx),r=parseInt(n.dataset.vy);let i=parseInt(n.getAttribute("cx")),l=parseInt(n.getAttribute("cy"));i+25>a.width?(i=a.width-25,n.dataset.vx=-1):i-25<0?(i=25,n.dataset.vx=1):i+=o,l+25>a.height?(l=a.height-25,n.dataset.vy=-1):l-25<0?(l=25,n.dataset.vy=1):l+=r,n.setAttribute("cx",i),n.setAttribute("cy",l)}}),g=(z.compDef({draw:t=>z.elem("div",z.elem("div"),z.elem("div"))}),z.compDef({draw:t=>z.elem("header",{id:"header"},z.elem("nav",[{name:"Home",href:""},{name:"Quickstart",href:"quickstart"},{name:"Github",href:"https://github.com/"}].map((t=>z.elem("a",{href:t.href},z.text(t.name))))),z.elem("div",z.elem("div",{class:"logo"},z.elem("img",{src:"img/zenith-logo.min.svg"})),z.elem("div",{class:"info"},z.elem("h1",z.text("Zenith.js is a tiny yet powerful GUI framework that is under 2kb minified and gzipped.")),z.elem("p",z.text("Its virtual dom and diffing algorithm function on an entire page or on specific nodes — especially useful in cases where you know that only a portion of the tree will change. Zenith.js is fast, flexible, and doesn’t require a compile step.")))))})),f=z.compDef({draw:t=>z.elem("main",z.elem("div",z.comp(t.attrs.comp)))}),w=z.compDef({draw:t=>z.elem("section",z.comp(e,{demo:r,code:"\n\t\t\t\t// Timer Demo\n\t\t\t\tconst timer = 0;\n\t\t\t\tconst Timer = z.compDef({\n\t\t\t\t\tinit: vNode => {\n\t\t\t\t\t\tsetInterval(() => {\n\t\t\t\t\t\t\ttimer++;\n\t\t\t\t\t\t\tvNode.redraw();\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t},\n\t\t\t\t\tdraw: vNode => z.elem('div', z.text('Timer: ' + timer))\n\t\t\t\t});"}),z.comp(e,{demo:a,code:"\n\t\t\t\t// Counter Demo\n\t\t\t\tconst counter = 0;\n\t\t\t\tconst Counter = z.compDef({\n\t\t\t\t\tdraw: vNode => [\n\t\t\t\t\t\tz.text('Counter: ' + counter),\n\t\t\t\t\t\tz.elem('button', {\n\t\t\t\t\t\t\tonclick() {\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t\tvNode.redraw();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, z.text('+')),\n\t\t\t\t\t\tz.elem('button', {\n\t\t\t\t\t\t\tonclick() {\n\t\t\t\t\t\t\t\tcounter--;\n\t\t\t\t\t\t\t\tvNode.redraw();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, z.text('-'))\n\t\t\t\t\t]\n\t\t\t\t});"}),z.comp(e,{demo:l,code:"\n\t\t\t\t// Todos Demo\n\t\t\t\tlet todoText = '';\n\t\t\t\tlet todos = [];\n\t\t\t\tconst Todo = z.compDef( {\n\t\t\t\t\tdraw: vNode => [\n\t\t\t\t\t\tz.elem('input', {\n\t\t\t\t\t\t\toninput(e) {\n\t\t\t\t\t\t\t\ttodoText = e.target.value;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tplaceholder: 'Enter a label.'\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tz.elem('button', {\n\t\t\t\t\t\t\tonclick() {\n\t\t\t\t\t\t\t\tif(todoText.length) {\n\t\t\t\t\t\t\t\t\ttodos.push(todoText);\n\t\t\t\t\t\t\t\t\tvNode.redraw();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, z.text('Add Todo')),\n\t\t\t\t\t\tz.elem('ul',\n\t\t\t\t\t\t\ttodos.map((item, index) => \n\t\t\t\t\t\t\t\tz.elem('li',\n\t\t\t\t\t\t\t\t\tz.text(item),\n\t\t\t\t\t\t\t\t\tz.elem('button', {\n\t\t\t\t\t\t\t\t\t\tonclick(e) {\n\t\t\t\t\t\t\t\t\t\t\ttodos.splice(index, 1);\n\t\t\t\t\t\t\t\t\t\t\tvNode.redraw();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, z.text('x'))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tz.draw(document.querySelector('section#todo'), Todo);\n\t\t\t\t"}),z.comp(e,{demo:p,code:"\n\t\t\t\t// Keyed List Demo\n\t\t\t\tconst firstNames = [\n\t\t\t\t\t'Aki', 'Adam', 'Amy', 'Ang',\n\t\t\t\t\t'Brianna', 'Bruce',\n\t\t\t\t\t'Cassandra', 'Charles', 'Colette',\n\t\t\t\t\t'Dae', 'Deion',\n\t\t\t\t\t'Elijah', 'Emma',\n\t\t\t\t\t'Han', 'Hiromi',\n\t\t\t\t\t'Jackie', 'Jamal', 'Jin',\n\t\t\t\t\t'Kalisha', 'Keysha', 'Lamonte',\n\t\t\t\t\t'Liang',\n\t\t\t\t\t'Naoki',\n\t\t\t\t\t'Osamu'\n\t\t\t\t];\n\t\t\t\tconst lastNames = [\n\t\t\t\t\t'Anderson', \n\t\t\t\t\t'Barnes',\n\t\t\t\t\t'Chan',\n\t\t\t\t\t'Diaz',\n\t\t\t\t\t'Ferguson',\n\t\t\t\t\t'Hunt',\n\t\t\t\t\t'James',\n\t\t\t\t\t'Lee',\n\t\t\t\t\t'McDonald',\n\t\t\t\t\t'Olson',\n\t\t\t\t\t'Ramirez',\n\t\t\t\t\t'Singh', 'Smith',\n\t\t\t\t\t'Wood'\n\t\t\t\t];\n\t\t\t\tconst people = [];\n\t\t\t\tfor(let i = 0; i < 250; i++) {\n\t\t\t\t\tpeople.push({\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tfirstName: firstNames[Math.floor(Math.random() * firstNames.length)],\n\t\t\t\t\t\tlastName: lastNames[Math.floor(Math.random() * lastNames.length)],\n\t\t\t\t\t\tage: Math.floor(Math.random() * 60 + 18)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst shuffle = arr => {\n\t\t\t\t\tlet currentIndex = arr.length, randomIndex;\n\t\t\t\t\twhile (currentIndex !== 0) {\n\t\t\t\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\t\t\t\tcurrentIndex--;\n\t\t\t\t\t\t[arr[currentIndex], arr[randomIndex]] = [arr[randomIndex], arr[currentIndex]];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst KeyedList = z.compDef({\n\t\t\t\t\tdraw: vNode => [\n\t\t\t\t\t\tz.elem('div',\n\t\t\t\t\t\t\tz.text('Sort by:'),\n\t\t\t\t\t\t\tz.elem('select',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tonchange(e) {\n\t\t\t\t\t\t\t\t\t\tswitch(e.target.value) {\n\t\t\t\t\t\t\t\t\t\t\tcase 'id':\n\t\t\t\t\t\t\t\t\t\t\t\tpeople.sort((a,b) => a.id-b.id);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase 'firstname':\n\t\t\t\t\t\t\t\t\t\t\t\tpeople.sort((a,b) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst nameA = a.firstName.toUpperCase();\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst nameB = b.firstName.toUpperCase();\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (nameA < nameB) return -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (nameA > nameB) return 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase 'lastname':\n\t\t\t\t\t\t\t\t\t\t\t\tpeople.sort((a,b) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst nameA = a.lastName.toUpperCase();\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst nameB = b.lastName.toUpperCase();\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (nameA < nameB) return -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (nameA > nameB) return 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase 'age':\n\t\t\t\t\t\t\t\t\t\t\t\tpeople.sort((a,b) => a.age-b.age);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase 'random':\n\t\t\t\t\t\t\t\t\t\t\t\tsuffle(people);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvNode.redraw();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tz.elem('option', {\n\t\t\t\t\t\t\t\t\tvalue: 'id',\n\t\t\t\t\t\t\t\t}, z.text('ID')),\n\t\t\t\t\t\t\t\tz.elem('option', {\n\t\t\t\t\t\t\t\t\tvalue: 'firstname',\n\t\t\t\t\t\t\t\t}, z.text('First Name')),\n\t\t\t\t\t\t\t\tz.elem('option', {\n\t\t\t\t\t\t\t\t\tvalue: 'lastname',\n\t\t\t\t\t\t\t\t}, z.text('Last Name')),\n\t\t\t\t\t\t\t\tz.elem('option', {\n\t\t\t\t\t\t\t\t\tvalue: 'age',\n\t\t\t\t\t\t\t\t}, z.text('Age')),\n\t\t\t\t\t\t\t\tz.elem('option', {\n\t\t\t\t\t\t\t\t\tvalue: 'random',\n\t\t\t\t\t\t\t\t}, z.text('Random')),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tz.elem('table',\n\t\t\t\t\t\t\tz.elem('thead',\n\t\t\t\t\t\t\t\tz.elem('tr',\n\t\t\t\t\t\t\t\t\tz.elem('th', 'ID'),\n\t\t\t\t\t\t\t\t\tz.elem('th', 'First Name'),\n\t\t\t\t\t\t\t\t\tz.elem('th', 'Last Name'),\n\t\t\t\t\t\t\t\t\tz.elem('th', 'Age'),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tz.elem('tbody',\n\t\t\t\t\t\t\t\tpeople.map( person => z.elem('tr', {key: person.id},\n\t\t\t\t\t\t\t\t\tz.elem('td', z.text(person.id)),\n\t\t\t\t\t\t\t\t\tz.elem('td', z.text(person.firstName)),\n\t\t\t\t\t\t\t\t\tz.elem('td', z.text(person.lastName)),\n\t\t\t\t\t\t\t\t\tz.elem('td', {class: 'r'}, z.text(person.age)),\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t]\n\t\t\t\t});"}),z.comp(e,{demo:v,code:"\n\t\t\t\t// Canvas Demo\n\t\t\t\t// In cases where you want granular control over a\n\t\t\t\t// component’s DOM it is possible to draw it once,\n\t\t\t\t// and then use the tick callback to have GUI updates\n\t\t\t\t// synchronized with Zenith’s tick cycle.\n\t\t\t\tconst Canvas = z.compDef({\n\t\t\t\t\tdraw: (vNode, oldChildren) => oldChildren || z.elem('canvas', {\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '100%'\n\t\t\t\t\t}),\n\t\t\t\t\ttick: (vNode, tickCount) => {\n\t\t\t\t\t\tconst canvas = vNode.dom[0];\n\t\t\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\t\t\tconst bounds = canvas.getBoundingClientRect();\n\t\t\t\t\t\tconst canvasWidth = bounds.width * window.devicePixelRatio;\n\t\t\t\t\t\tconst canvasHeight = bounds.height * window.devicePixelRatio;\n\t\t\t\t\t\tconst rectWidth = Math.random() * canvasWidth / 10;\n\t\t\t\t\t\tconst rectHeight = Math.random() * canvasHeight / 10;\n\t\t\t\t\t\tif(canvas.width != canvasWidth) canvas.width = canvasWidth;\n\t\t\t\t\t\tif(canvas.height != canvasHeight) canvas.height = canvasHeight;\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.globalAlpha = 1;\n\t\t\t\t\t\tcontext.globalCompositeOperation = 'destination-in';\n\t\t\t\t\t\tcontext.fillStyle = 'rgba(0, 0, 0, 0.95)';\n\t\t\t\t\t\tcontext.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tcontext.fillStyle = getRndColor();\n\t\t\t\t\t\tcontext.fillRect(\n\t\t\t\t\t\t\tMath.random() * (canvasWidth - rectWidth),\n\t\t\t\t\t\t\tMath.random() * (canvasHeight - rectHeight),\n\t\t\t\t\t\t\trectWidth,\n\t\t\t\t\t\t\trectHeight\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});"}),z.comp(e,{demo:x,code:"\n\t\t\t\t// SVG Demo\n\t\t\t\tconst radius = 25;\n\t\t\t\tconst velocity = 1;\n\t\t\t\tconst SVG = z.compDef({\n\t\t\t\t\tdraw: (vNode, oldChildren) => z.elem('svg',\n\t\t\t\t\t\tz.elem('circle', {\n\t\t\t\t\t\t\tcx: radius,\n\t\t\t\t\t\t\tcy: radius,\n\t\t\t\t\t\t\tr: radius,\n\t\t\t\t\t\t\t'data-vx': velocity,\n\t\t\t\t\t\t\t'data-vy': velocity,\n\t\t\t\t\t\t})\n\t\t\t\t\t),\n\t\t\t\t\ttick: vNode => {\n\t\t\t\t\t\tconst svg = vNode.children[0].dom;\n\t\t\t\t\t\tconst circle = svg.querySelector('circle');\n\t\t\t\t\t\tconst bounds = svg.getBoundingClientRect();\n\t\t\t\t\t\tconst vx = parseInt(circle.dataset.vx);\n\t\t\t\t\t\tconst vy = parseInt(circle.dataset.vy);\n\t\t\t\t\t\tlet x = parseInt(circle.getAttribute('cx'));\n\t\t\t\t\t\tlet y = parseInt(circle.getAttribute('cy'));\n\t\t\t\t\t\tif(x + radius > bounds.width) {\n\t\t\t\t\t\t\tx = bounds.width - radius;\n\t\t\t\t\t\t\tcircle.dataset.vx = -velocity;\n\t\t\t\t\t\t} else if(x - radius < 0) {\n\t\t\t\t\t\t\tx = radius;\n\t\t\t\t\t\t\tcircle.dataset.vx = velocity;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tx += vx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(y + radius > bounds.height) {\n\t\t\t\t\t\t\ty = bounds.height - radius;\n\t\t\t\t\t\t\tcircle.dataset.vy = -velocity;\n\t\t\t\t\t\t} else if(y - radius < 0) {\n\t\t\t\t\t\t\ty = radius;\n\t\t\t\t\t\t\tcircle.dataset.vy = velocity;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ty += vy;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcircle.setAttribute('cx', x);\n\t\t\t\t\t\tcircle.setAttribute('cy', y);\n\t\t\t\t\t}\n\t\t\t\t});"}))}),b=z.compDef({draw:t=>z.elem("footer",{id:"footer"},z.elem("div",z.text("Copyright ©2022 Aleph1 / Daniel Barber")))}),y=z.compDef({draw:t=>[z.comp(g),z.comp(f,{comp:t.attrs.comp}),z.comp(b)]});z.draw(document.querySelector("#app"),z.comp(y,{comp:w})),setTimeout((()=>document.querySelector("html").classList.add("loaded")),1)})();
